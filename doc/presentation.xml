<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Introducing OxGarage</title>
        <author>Sebastian Rahtz<lb/>Director of Academic IT<lb/>IT Services<lb/>University of Oxford</author>
      </titleStmt>
      <editionStmt>
        <edition>
          <date>August 2014</date>
        </edition>
      </editionStmt>
      <publicationStmt>
        <publisher>University of Oxford</publisher>
        <availability>
          <p>Freely available for use and derivative works under a Creative Commons Attribution
	      license.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Various previous talks, TEI Guidelines, etc.</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change>
        <date>$LastChangedDate: 2012-06-13 23:24:13 +0100 (Wed, 13 Jun 2012) $.</date>
        <name>$LastChangedBy: rahtz $</name>
        <note>$LastChangedRevision: 11831 $</note>
      </change>
    </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <div>
        <head>OxGarage</head>
        <p>OxGarage provides document transformations   </p>
	<hi><ptr  target="http://oxgarage.oucs.ox.ac.uk:8080/ege-webclient"/></hi>
	<list>
	  <item>Web and REST interface</item>
	  <item>Chained XSLT conversions</item>
	  <item>Uses headless OpenOffice for binary conversions</item>
	  <item>Uses Text Encoding Initiative (TEI) XML as pivot format</item>
	  <item>Read/write OpenOffice and Open XML</item>
	  <item>Supports “profiles” for variations</item>
	  <item>Open source across the board</item>
	</list>
      </div>

      <div>
	<head>History and dependencies</head>
	<list>
	  <item>Built at the University of Poznan for EU-funded ENRICH
	  project’s EGE for converting manuscript descriptions, using
	  conversions and libraries from Oxford </item>
	  <item>Now developed and maintained as a fork by the University of Oxford</item>
	  <item>Java servlet, running under Tomcat in current instances</item>
	  <item>Almost all work done as XSLT transforms using Saxon library</item>
	  <item>Uses OpenOffice to read/write  .doc, .xls, .ppt files etc</item>
	</list>
	<p><ptr target="http://www.github.com/sebastianrahtz/oxgarage"/></p>
      </div>

      <div>
        <head>Matrix of OxGarage conversions (1)</head>
        <p>
          <graphic url="oxmatrix1.png"/>
        </p>
      </div>

      <div>
        <head>Matrix of OxGarage conversions (2)</head>
        <p>
          <graphic url="oxmatrix2.png"/>
        </p>
      </div>

      <div>
	<head>Handling Word, OpenOffice, XSLX</head>
	<p>Formats are zip directories of simple XML files:</p>
	<egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
Sebastians-MacBook-Pro-3:oxgarage rahtz$ unzip -l Tests/test.docx
Archive:  Tests/test.docx
  Length     Date   Time    Name
 --------    ----   ----    ----
     2712  01-01-80 00:00   [Content_Types].xml
      737  01-01-80 00:00   _rels/.rels
     2944  01-01-80 00:00   word/_rels/document.xml.rels
   376785  01-01-80 00:00   word/document.xml
     1809  01-01-80 00:00   word/footer3.xml
     1888  01-01-80 00:00   word/footer2.xml
     1831  01-01-80 00:00   word/footer1.xml
     1386  01-01-80 00:00   word/header2.xml
     1386  01-01-80 00:00   word/header1.xml
     2009  01-01-80 00:00   word/endnotes.xml
     2719  01-01-80 00:00   word/footnotes.xml
     1386  01-01-80 00:00   word/header3.xml
     7559  01-01-80 00:00   word/theme/theme1.xml
     1960  01-01-80 00:00   word/settings.xml
     2552  01-01-80 00:00   word/fontTable.xml
    19762  01-01-80 00:00   word/styles.xml
    15740  01-01-80 00:00   word/stylesWithEffects.xml
      365  01-01-80 00:00   docProps/custom.xml
     1105  01-01-80 00:00   docProps/app.xml
      787  01-01-80 00:00   docProps/core.xml
      418  01-01-80 00:00   word/webSettings.xml
    17849  01-01-80 00:00   word/numbering.xml
	</egXML>
      </div>

      <div>
	<head>What's the TEI?</head>
	<p>The <hi>Text Encoding Initiative</hi> is a scholarly
	consortium which maintains a set of <hi>Guidelines</hi> for
	digital text.
	<list>
	  <item>Active since c.1990, now at 5th major revision</item>
	  <item>Covers representation of printed books, manuscripts, dictionaries, letters, speech transcription, linguistic annotation, facsimiles etc etc</item>
	  <item>Primarily <hi>descriptive</hi> not <hi>prescriptive</hi>, with a set of carefully defined semantic distinctions (over 600 elements)</item>
	  <item>Designed as a libraries of components from which a project puts together a customization for its own encoding needs</item>
	  <item>Uses own language (ODD) to describe its schema, compilable to DTD, RELAXNG or XSD</item>
	  <item>Makes use of ISO Schematron language to describe non-schema-modellable constraints</item>
	  <item>Follows principles of literate programming: TEI is one  XML document containing all documentation and schema definitions</item>
	</list>
	</p>
      </div>

      <div>
	<head>What are the TEI stylesheets?</head>
	<p>A set of XSLT 2.0 transformations which read and write TEI XML
	<list>
	  <item>Written and maintained by University of Oxford since 2000</item>
	  <item>Defines read or write for formats like bibtex, csv,
	  docbook, docx, dtd, epub, XSL fo, html, json, latex, markdown,
	  nlm, odt, pdf, rdf, relaxng, tbx, tcp, tite, txt,
	  wordpress, xlsx, and xsd</item>
	  <item>Uses "trang" library to generate XSD from RELAXNG</item>
	  <item>Uses TeX install to write PDF</item>
	  <item>Uses "profiles" as containers for customization</item>
	  <item>Comes with set of shell scripts to perform all conversions, mostly using
	  Ant to define tasks</item>
	</list>
	</p>
	<p><ptr target="http://www.github.com/TEIC/Stylesheets"/></p>
      </div>

      <div>
<head>Example of customization</head>
<p>Note the naming convention: <code>profiles/sciencejournal/html/to.xsl</code></p>
<egXML xmlns="http://www.tei-c.org/ns/Examples" >
    <xsl:import href="../../../html/html.xsl"/>
   <xsl:output method="xhtml" omit-xml-declaration="yes"/>
   <xsl:param name="pagebreakStyle">none</xsl:param>
   <xsl:param name="institution"></xsl:param>
   <xsl:param name="numberHeadings">false</xsl:param>
   <xsl:param name="autoToc">false</xsl:param>
   <xsl:template name="stdfooter"/>
   <xsl:template name="stdheader">
     <xsl:param name="title"/>
   </xsl:template>
</egXML>
      </div>

      <div>
	<head>For the TEI user</head>
        <p>OxGarage lets TEI people: <list>
            <item>convert schema documentation to HTML, ePub,  DOCX etc</item>
            <item>generate schemas from ODD</item>
            <item>convert between TEI XML and Word DOCX</item>
            <item>convert TEI documents to (eg)  RDF, CSV, LaTeX..</item>
            <item>perform all the ODD tasks using web services</item>
          </list>
        </p>
      </div>

      <div>
	<head>REST interface</head>
<p><code>curl localhost:8080/ege-webservice/Conversions</code>:
<egXML xmlns="http://www.tei-c.org/ns/Examples"  rend="tiny">
<input-data-types xmlns:xlink="http://www.w3.org/1999/xlink">
<input-data-type id="Documents:Compiled TEI ODD:ODDC,text/xml" xlink:href="http://localhost:8080/ege-webservice/Conversions/ODDC%3Atext%3Axml/" />
<input-data-type id="Documents:DocBook Document:DBK,text/xml" xlink:href="http://localhost:8080/ege-webservice/Conversions/DBK%3Atext%3Axml/" />
<input-data-type id="Documents:Markdown tagging:markdown,text/plain" xlink:href="http://localhost:8080/ege-webservice/Conversions/markdown%3Atext%3Aplain/" />
<input-data-type id="Documents:Microsoft Word (.doc):doc,application/msword" xlink:href="http://localhost:8080/ege-webservice/Conversions/doc%3Aapplication%3Amsword/" />
<input-data-type id="Documents:Microsoft Word (.docx):docx,application/vnd.openxmlformats-officedocument.wordprocessingml.document" xlink:href="http://localhost:8080/ege-webservice/Conversions/docx%3Aapplication%3Avnd.openxmlformats-officedocument.wordprocessingml.document/" />
...
</input-data-types>
</egXML>
</p>
      </div>

      <div>
	<head>More REST</head>
<egXML xmlns="http://www.tei-c.org/ns/Examples"  rend="tiny">
<conversions-paths xmlns:xlink="http://www.w3.org/1999/xlink">
  <conversions-path xlink:href="http://localhost:8080/ege-webservice/Conversions/DBK%3Atext%3Axml/TEI%3Atext%3Axml/csv%3Atext%3Acsv/">
    <path-name><![CDATA[ 
 I:Documents:DocBook Document:DBK,text/xml/O:Documents:TEI P5 XML Document:TEI,text/xml(Docbook to TEI)->I:Documents:TEI P5 XML Document:TEI,text/xml/O:Spreadsheets:Comma-Separated Values (.csv):csv,text/csv(TEI to CSV) 
 ]]></path-name>
    <conversion id="I:Documents:DocBook Document:DBK,text/xml/O:Documents:TEI P5 XML Document:TEI,text/xml(Docbook to TEI)" index="0"/>
    <conversion id="I:Documents:TEI P5 XML Document:TEI,text/xml/O:Spreadsheets:Comma-Separated Values (.csv):csv,text/csv(TEI to CSV)" index="1"/>
  </conversions-path>
  <conversions-path xlink:href="http://localhost:8080/ege-webservice/Conversions/DBK%3Atext%3Axml/TEI%3Atext%3Axml/txt%3Atext%3Aplain/">
    <path-name><![CDATA[ 
 I:Documents:DocBook Document:DBK,text/xml/O:Documents:TEI P5 XML Document:TEI,text/xml(Docbook to TEI)->I:Documents:TEI P5 XML Document:TEI,text/xml/O:Documents:Plain text:txt,text/plain(TEI Converter) 
 ]]></path-name>
    <conversion id="I:Documents:DocBook Document:DBK,text/xml/O:Documents:TEI P5 XML Document:TEI,text/xml(Docbook to TEI)" index="0"/>
    <conversion id="I:Documents:TEI P5 XML Document:TEI,text/xml/O:Documents:Plain text:txt,text/plain(TEI Converter)" index="1">
      <property id="oxgarage.getImages">
        <value><![CDATA[true,false]]></value>
        <type>pathBoolean</type>
        <property-name>Copy and rename all provided images</property-name>
      </property>
      ....
      <property id="pl.psnc.dl.ege.tei.profileNames">
        <value><![CDATA[default,readme]]></value>
        <type>array</type>
        <property-name>Select conversion profile: </property-name>
      </property>
    </conversion>
  </conversions-path>
</conversions-paths>
</egXML>
      </div>
      
      <div>
	<head>Configuration</head>
	<list>
	  <item>Based on Mime types for document formats</item>
	  <item>Input and output formats</item>
	  <item>"Cost" of transform lets OxGarage pick cheapest route</item>
	</list>
      </div>

<div>
  <head>Configuration as plugin.xml file</head>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<plugin>
	<extension plugin-id="pl.psnc.dl.ege.root" point-id="XslConverter" id="CSVtoTEIconverter">
		<parameter id="class" value="pl.psnc.dl.ege.MultiXslConverter"/>
		<parameter id="name" value="CSV to TEI"/>
		<parameter id="xsluri" value="profiles/default/csv/from.xsl" />
		<parameter id="iMimeType" value="text/csv" />
		<parameter id="iFormat" value="csv" />
		<parameter id="iDescription" value="Comma-Separated Values (.csv)" />
		<parameter id="iType" value="spreadsheet" />		
		<parameter id="oMimeType" value="text/xml" />
		<parameter id="oFormat" value="TEI" />
		<parameter id="oDescription" value="TEI P5 XML Document" />	
		<parameter id="oType" value="text" />
		<parameter id="visibility" value="true" />
		<parameter id="cost" value="9" />
	</extension>
</plugin>
</egXML>
</div>
<div>
<head>Configuration in Java</head>
<egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
public enum Format {
    DOCX("docx","application/vnd.openxmlformats-officedocument.wordprocessingml.document","docx","TEI", "TEI P5 XML Document", "text", "Microsoft Word (.docx)", "text", true, 9),
    DTD("dtd","application/xml-dtd","dtd","ODDC", "Compiled TEI ODD", "text", "DTD created from ODD", "text", false, 10),
    EPUB("epub","application/epub+zip","epub","TEI", "TEI P5 XML Document", "text", "ePub", "text", true, 9),     
    FO("fo","application/xslfo+xml","fo","TEI", "TEI P5 XML Document", "text", "XSL-FO", "text", true, 10),
    LATEX("latex","application/x-latex","latex","TEI", "TEI P5 XML Document", "text", "LaTeX", "text", true, 10),
    LITE("TEI","text/xml","lite","ODDC", "Compiled TEI ODD", "text", "ODD documentation as TEI Lite", "text", false, 10),
    ODDHTML("oddhtml","application/xhtml+xml","oddhtml","ODDC", "Compiled TEI ODD", "text", "ODD documentation as HTML", "text", false, 5),
    ODDJSON("oddjson","application/json","oddjson","ODDC", "Compiled TEI ODD", "text", "Source ODD spec in JSON notation", "text", false, 10),
    ODT("odt","application/vnd.oasis.opendocument.text","odt","TEI", "TEI P5 XML Document", "text", "OpenOffice Text (.odt)", "text", true, 8),
    RDF("rdf","application/rdf+xml","rdf","TEI", "TEI P5 XML Document", "text", "RDF XML", "text", true, 5),
    RELAXNG("relaxng","application/xml-relaxng","relaxng","ODDC", "Compiled TEI ODD", "text", "RELAX NG schema", "text", true, 10),
    RNC("rnc","application/relaxng-compact","rnc","ODDC", "Compiled TEI ODD", "text", "RELAX NG compact schema", "text", false, 10),
    TEXT("txt","text/plain",    "txt","TEI", "TEI P5 XML Document", "text", "Plain text",   "text", true, 5),
    XHTML("xhtml","application/xhtml+xml","html","TEI", "TEI P5 XML Document", "text", "xHTML", "text", true, 9),
    XLSX("xlsx","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","xlsx","TEI", "TEI P5 XML Document", "text", "Microsoft Excel (.xlsx)", "spreadsheet", true, 9),
    XML("xml","application/xml","xml","TEI", "TEI P5 XML Document", "text", "XML Document", "text", true, 5),
    XSD("xsd","application/xml-xsd","xsd","ODDC", "Compiled TEI ODD", "text", "XSD schema", "text", false, 10);
}
</egXML></div>

<div>
<head>Dirty configuration in Java</head>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
				else if (format.equals(Format.XLSX) ) {
					ConversionActionArguments caa2 = new ConversionActionArguments(
							new DataType(format.getId(), format.getMimeType(), 
								format.getOutputDescription(), EGEConstants.SPREADSHEETFAMILY),
							new DataType(format.getFormatName(), XML_MIME, 
								format.getInputDescription(), EGEConstants.SPREADSHEETFAMILY), 
							sbParams.toString(), format.getVisible(), format.getCost());
					LOGGER.debug("registered alt type " + format.getMimeType());
					CONVERSIONS.add(caa2);
				}
</egXML>
</div>

      <div>
        <head>OxGarage web service example (1)</head>
        <p>Process ODD to compiled ODD, then to TEI Lite, then to DOCX 
<egXML xmlns="http://www.tei-c.org/ns/Examples">
curl -s  -F upload=@test.odd  -o test.docx
http://oxgarage.oucs.ox.ac.uk:8080/
ege-webservice/Conversions/
ODD%3Atext%3Axml/
ODDC%3Atext%3Axml/
TEI%3Atext%3Axml/
docx%3Aapplication%3Avnd.openxmlformats-officedocument.wordprocessingml.document/
</egXML>
        </p>
      </div>
      <div>
        <head>OxGarage web service example (2)</head>
        <p>ODD to HTML, in French</p>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><![CDATA[
curl -s  -F upload=@test.odd  -o test.html 
http://oxgarage.oucs.ox.ac.uk:8080/ege-webservice/Conversions/
ODD%3Atext%3Axml/
ODDC%3Atext%3Axml/
oddhtml%3Aapplication%3Axhtml%2Bxml/
?properties=<conversions><conversion%20index='1'>
<property%20id='oxgarage.lang'>fr</property></conversion></conversions>]]>
</egXML>
      </div>

    </body>
  </text>
</TEI>

